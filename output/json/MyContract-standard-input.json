{
  "language": "Solidity",
  "sources": {
    "contracts/MyContract.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract MyContract {\r\n    string public message;\r\n    address public owner;\r\n\r\n    event MessageChanged(string newMessage);\r\n\r\n    constructor(string memory _message) {\r\n        message = _message;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setMessage(string memory _message) public {\r\n        require(msg.sender == owner, \"Only owner can change message\");\r\n        message = _message;\r\n        emit MessageChanged(_message);\r\n    }\r\n\r\n    function getMessage() public view returns (string memory) {\r\n        return message;\r\n    }\r\n}\r\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "metadata"
        ]
      }
    }
  }
}