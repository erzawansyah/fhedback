{"language":"Solidity","sources":{"contracts/MyContract.sol":{"content":"// SPDX-License-Identifier: MIT pragma solidity ^0.8.20; contract MyContract { string public message; address public owner; event MessageChanged(string newMessage); constructor(string memory _message) { message = _message; owner = msg.sender; } function setMessage(string memory _message) public { require(msg.sender == owner, \"Only owner can change message\"); message = _message; emit MessageChanged(_message); } function getMessage() public view returns (string memory) { return message; } }"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["*"]}}}}